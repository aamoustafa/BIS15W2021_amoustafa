us_comp <- usa_sf()
ggplot() +
geom_sf(data=us_comp, size=0.125) +
theme_linedraw() +
labs(title="USA State Boundaries",
x="Longitude",
y="Latitude" )
install.packages(c("broom", "cachem", "cli", "dplyr", "htmltools", "pillar", "pkgload", "rmarkdown", "svglite", "tibble", "units", "xfun"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("tidyverse")
library("shiny")
library("naniar")
library("shinydashboard")
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:",
choices=unique(homerange$taxon)),
hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")
),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot")
)
)
)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
runApp('newuntitled.R')
knitr::opts_chunk$set(echo = TRUE)
Uptake_rate <-c(14.2, 24.1, 30.3, 34.6, 32.5, 35.4, 38.7,
9.3, 27.3, 35, 38.8, 38.6, 37.5, 42.4,
15.1, 21, 38.1, 34, 38.9, 39.6, 41.4)
t.test(Uptake_rate, mu = 27)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(janitor)
library(naniar)
uc_admit <- readr::read_csv("data/UC_admit.csv")
uc_admit <- clean_names(uc_admit)
uc_admit %>%
miss_var_summary()
glimpse(uc_admit)
names(uc_admit)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
library(tidyverse)
library(shiny)
library(shinydashboard)
library(janitor)
library(naniar)
uc_admit <- readr::read_csv("data/UC_admit.csv")
uc_admit <- clean_names(uc_admit)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
))
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x = input$x, y = "filtered_count_fr", fill= "ethnicity")) +
geom_col(position= "dodge")+
theme_light(base_size = 18)+
labs(x = NULL, y = NULL)
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Admissions by Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
))
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x = input$x, y = "filtered_count_fr", fill= "ethnicity")) +
geom_col(position= "dodge")+
theme_light(base_size = 18)+
labs(x = NULL, y = NULL)
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admits By Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),# what does hr mean?
helpText("From the University of California Information Center")
), # close the first box
box(title = "Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x = input$x, y = "filtered_count_fr", fill= "ethnicity")) +
geom_col(position= "dodge")+
scale_color_brewer(palette= "Set1")+
theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices=c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("From the University of California Information Center")
),
box(title = "Ethnicity", width=6,
plotOutput("plot", width="600px", height="500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x = input$x, y = "filtered_count_fr", fill= "ethnicity")) +
geom_col(position= "dodge")+
theme_light(base_size = 18)+
labs(x="Ethnicity", y="Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices=c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("From the University of California Information Center")
),
box(title = "Ethnicity", width=6,
plotOutput("plot", width="600px", height="500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x = input$x, y = "filtered_count_fr", fill= "ethnicity")) +
geom_col(position= "dodge")+
theme_light(base_size = 18)+
labs(x="Ethnicity", y="Admissions") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(uc_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set1")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Enrollment Variable", choices = c("category", "ethnicity", "campus"),
selected = "category"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Enrollment", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit_tidy, aes_string(x="academic_yr", y="filtered_count_fr", fill=input$x)) +
geom_col() +
theme_light(base_size = 18) +
labs(x = NULL, y = NULL) +
theme(axis.text.x = element_text(angle=60, hjust=1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Enrollment Variable", choices = c("category", "ethnicity", "campus"),
selected = "category"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Enrollment", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(uc_admit, aes_string(x="academic_yr", y="filtered_count_fr", fill=input$x)) +
geom_col() +
theme_light(base_size = 18) +
labs(x = NULL, y = NULL) +
theme(axis.text.x = element_text(angle=60, hjust=1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Fill Variable", choices = c("category", "ethnicity", "campus"),
selected = "category"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Enrollment", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x="academic_yr", y="filtered_count_fr", fill=input$x)) +
geom_col(position = "dodge") +
theme_light(base_size = 18) +
labs(x = "Year", y = "Admissions") +
theme(axis.text.x = element_text(angle=60, hjust=1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Fill Variable", choices = c("category", "ethnicity", "campus"),
selected = "category"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "UC Enrollment", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x="academic_yr", y="filtered_count_fr", fill=input$x)) +
geom_col() +
theme_light(base_size = 18) +
labs(x = "Year", y = "Admissions") +
theme(axis.text.x = element_text(angle=60, hjust=1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices=c("campus", "academic_yr", "category"),
selected="campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Ethnicity", width=6,
plotOutput("plot", width="600px", height="500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x=input$x, y="filtered_count_fr", fill="ethnicity")) +
geom_col()+
theme_light(base_size=18)+
labs(x="Ethnicity", y="Admissions") +
theme(axis.text.x=element_text(angle=60, hjust=1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
options(scipen=999)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions By Ethnicity"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Variable", choices=c("campus", "academic_yr", "category"),
selected="campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Ethnicity", width=6,
plotOutput("plot", width="600px", height="500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
ggplot(aes_string(x=input$x, y="filtered_count_fr", fill="ethnicity")) +
geom_col()+
theme_light(base_size=18)+
labs(x="Ethnicity", y="Admissions") +
theme(axis.text.x=element_text(angle=60, hjust=1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(tidyverse)
library(ggmap)
library(lubridate)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
repeat {
commands
if(condition) {
break
}
}
data <- data.frame(x1 = 1:5,      # Create example data
x2 = 6:10,
x3 = 11:15)
data
data1 <- data                   # Replicate example data
i <- 1                          # Create running index
repeat{                         # Start repeat-loop
data1[ , i] <- data1[ , i] + 100
i <- i + 1
if(i > 2) {
break
}
}
data1
#?iris
data(iris)                          # Loading data frame
head(iris)                          # Head of example data
iris1 <- iris                       # Replicate example data
i <- 1
repeat{
iris1[ , i] <- iris1[ , i] * 10
i <- i + 1
if(!is.numeric(iris1[ , i])){
break
}
}
head(iris1)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
for (i in 1:10) {
print(i)
}
data3 <- data                       # Replicate example data
data3
for(i in 1:2) {           # for-loop over columns
data3[ , i] <- data3[ , i] + 100
}
data3
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
